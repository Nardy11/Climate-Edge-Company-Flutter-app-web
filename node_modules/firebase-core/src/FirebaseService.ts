import { initializeApp, FirebaseApp } from 'firebase/app';
import { getAnalytics, Analytics } from 'firebase/analytics';
import { getAuth, Auth } from 'firebase/auth';
import { getStorage, FirebaseStorage } from 'firebase/storage';
import { getFirestore, Firestore } from 'firebase/firestore';
import { getFunctions, Functions } from 'firebase/functions';
import { getMessaging, Messaging } from "firebase/messaging";

/**
 * Firebase configuration object
 * Required to initialize Firebase app
 * @interface FirebaseConfig
 * @property {string} apiKey - Firebase API key
 * @property {string} authDomain - Firebase Auth domain
 * @property {string} projectId - Firebase project ID
 * @property {string} storageBucket - Firebase storage bucket
 * @property {string} messagingSenderId - Firebase messaging sender ID
 * @property {string} appId - Firebase app ID
 * @property {string} measurementId - Firebase measurement ID
 * 
 * @recommended Store credentials in environment variables and import them here
 * @example
 * const config: FirebaseConfig = {
 *  apiKey: process.env.FIREBASE_API_KEY,
 *  authDomain: process.env.FIREBASE_AUTH_DOMAIN,
 *  projectId: process.env.FIREBASE_PROJECT_ID,
 *  storageBucket: process.env.FIREBASE_STORAGE_BUCKET,
 *  messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,
 *  appId: process.env.FIREBASE_APP_ID,
 *  measurementId: process.env.FIREBASE_MEASUREMENT_ID,
 * };
 */
export interface FirebaseConfig {
  apiKey: string;
  authDomain: string;
  projectId: string;
  storageBucket: string;
  messagingSenderId: string;
  appId: string;
  measurementId: string;
}

/**
 * Firebase object containing all Firebase services
 * @interface Firebase
 * @property {FirebaseApp} app - Firebase app
 * @property {Analytics} analytics - Firebase analytics
 * @property {Auth} auth - Firebase authentication
 * @property {FirebaseStorage} storage - Firebase storage
 * @property {Firestore} firestore - Firebase Firestore
 * @property {Functions} functions - Firebase functions
 * @property {Messaging} messaging - Firebase messaging
 * 
 * Add more Firebase services as needed
 */
export interface Firebase {
  app: FirebaseApp;
  analytics: Analytics;
  auth: Auth;
  storage: FirebaseStorage;
  firestore: Firestore;
  functions: Functions;
  messaging: Messaging;
}

/**
 * Firebase service class
 * 
 * @singleton FirebaseService - Returns the FirebaseService instance
 * @class FirebaseService - Initializes Firebase app with the provided configuration
 * @method getInstance - Returns the FirebaseService instance
 * @method getFirebase - Returns the Firebase object containing all Firebase services
 * 
 * @example
 * const config: FirebaseConfig = { ... };
 * const firebase = FirebaseService.getInstance(config).getFirebase();
 */
export default class FirebaseService {

  private static instance: FirebaseService;
  private firebase: Firebase;

  /**
   * 
   * @param config - Firebase configuration object
   * Initializes Firebase app with the provided configuration
   * Sets up Firebase services: app,
   * analytics, auth, storage, firestore, functions, messaging
   * 
   * Add more Firebase services as needed
   */
  private constructor(config: FirebaseConfig) {
    const app = initializeApp(config);
    const analytics = getAnalytics(app);
    const auth = getAuth(app);
    const storage = getStorage(app);
    const firestore = getFirestore(app);
    const functions = getFunctions(app);
    const messaging = getMessaging(app);

    this.firebase = {
      app,
      analytics,
      auth,
      storage,
      firestore,
      functions,
      messaging,
    };
  }

  /**
   * 
   * @param {FirebaseConfig} config - Firebase configuration object
   * @returns {FirebaseService} - FirebaseService instance
   * 
   */
  public static getInstance(config: FirebaseConfig): FirebaseService {
    if (!FirebaseService.instance) {
    FirebaseService.instance = new FirebaseService(config);
    }

    return FirebaseService.instance;
  }
  
  /**
   * 
   * @returns {Firebase} - Firebase object containing all Firebase services
   * namely app, analytics, auth, storage, firestore, functions, messaging
   * 
   * @example
   * const firebase = FirebaseService.getInstance(config).getFirebase();
   * const auth = firebase.auth;
   * const storage = firebase.storage;
   * const firestore = firebase.firestore;
   * etc.
   */
  public getFirebase(): Firebase {
    return this.firebase;
  }
}